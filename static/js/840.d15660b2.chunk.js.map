{"version":3,"file":"static/js/840.d15660b2.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/MainContent/Profile/Profile.module.css?4a10","components/MainContent/Profile/ProfileStatus.jsx","components/MainContent/Profile/Profile.jsx","components/MainContent/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"whiteBg\":\"Profile_whiteBg__PKEUq\",\"transparent\":\"Profile_transparent__VkP+M\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [status, setStatus] = useState(props.status);\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const enterEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const exitEditMode = () => {\r\n        setEditMode(false)\r\n        props.updStatusThunk(status);\r\n    }\r\n    const changeStatusText = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n    const changeStatusTextOnEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setEditMode(false)\r\n            props.updStatusThunk(status);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    return <>\r\n        {editMode &&\r\n            <input type=\"text\"\r\n                   onChange={changeStatusText}\r\n                   onBlur={exitEditMode}\r\n                   autoFocus\r\n                   onKeyDown={changeStatusTextOnEnter}\r\n                   value={\r\n                       status === null ?\r\n                           'Add your status' :\r\n                           status\r\n                   }/>\r\n        }\r\n        {!editMode &&\r\n            <span onClick={enterEditMode}>{\r\n                props.status === null || props.status === '' ?\r\n                    'Add your status' :\r\n                    props.status\r\n            }\r\n                <i style={{marginLeft: '7px'}} className=\"fa fa-edit\"/></span>\r\n        }\r\n    </>\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect} from \"react\";\r\nimport userIcon from \"../../common/assets/img/userIcon.jpg\";\r\nimport style from './Profile.module.css'\r\nimport profileBackground from '../../common/assets/img/profileCover.jpg'\r\nimport Preloader from \"../../common/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {updatePhoto} from \"../../redux/ProfilePageReducer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    let userId = useParams().userId;\r\n\r\n    if (!userId) userId = props.myId\r\n\r\n    useEffect(() => {\r\n        props.loadProfile(userId)\r\n    }, [userId])\r\n\r\n    const followUserProfile = () => {\r\n        props.followUser(userId);\r\n    }\r\n\r\n    const unfollowUserProfile = () => {\r\n        props.unfollowUser(userId);\r\n    }\r\n    const onPhotoUpload = (e) => {\r\n        if (e.target.files[0]) props.updatePhoto(e.target.files[0])\r\n    }\r\n    if (!props.profile) return <Preloader/>\r\n    return <div className='central-meta'>\r\n        <div className=\"feature-photo\">\r\n            <figure><img src={profileBackground} alt=\"\"/></figure>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row merged\">\r\n                    <div className=\"col-sm-12 bg\">\r\n                        <div className=\"timeline-info\">\r\n                            <ul>\r\n                                <li>\r\n                                    <div className=\"user-avatar\">\r\n                                        <figure\r\n                                            className={props.profile.photos.large && !props.photoUpdating ? style.transparent : style.whiteBg}>\r\n                                            {props.photoUpdating ? <Preloader /> :\r\n                                                <img\r\n                                                    src={props.profile.photos.large ? props.profile.photos.large : userIcon}\r\n                                                    alt=\"\"/>\r\n                                            }\r\n                                            <form className=\"edit-phto\">\r\n                                                <i className=\"fa fa-edit\"/>\r\n                                                <label className=\"fileContainer\">\r\n                                                    Edit Display Photo\r\n                                                    <input onChange={onPhotoUpload} type=\"file\"/>\r\n                                                </label>\r\n                                            </form>\r\n                                        </figure>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"admin-name\">\r\n                                    <h5>{props.profile.fullName}</h5>\r\n                                    <ProfileStatus status={props.status} updStatusThunk={props.updStatusThunk}/>\r\n                                </li>\r\n                                {props.followed ?\r\n                                    <button title=\"\" className=\"add-butn\" disabled={props.disableWhileRequest}\r\n                                            onClick={unfollowUserProfile}>Unfollow</button> :\r\n                                    <button title=\"\" className=\"add-butn\" disabled={props.disableWhileRequest}\r\n                                            onClick={followUserProfile}>Follow</button>\r\n                                }\r\n                                <li>\r\n                                    <ul className=\"education\">\r\n                                        <li><i className=\"ti-facebook\"></i> <a\r\n                                            href={`${props.profile.contacts.facebook}`}>My Facebook</a></li>\r\n                                        <li><i className=\"ti-twitter\"></i><a href={`${props.profile.contacts.twitter}`}>My\r\n                                            Twitter</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {followUser, loadProfile, unfollowUser, updatePhoto, updStatusThunk} from \"../../redux/ProfilePageReducer\";\r\nimport {compose} from \"redux\";\r\nimport withRedirect from \"../../HOC/withRedirect\";\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n    return <Profile {...props} />\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        followed: state.profilePage.followed,\r\n        disableWhileRequest: state.profilePage.disableWhileRequest,\r\n        status: state.profilePage.status,\r\n        myId: state.auth.userData.id,\r\n        photoUpdating: state.profilePage.photoUpdating\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRedirect,\r\n    connect(mapStateToProps, {followUser, unfollowUser, loadProfile, updStatusThunk, updatePhoto})\r\n)(ProfileContainer);"],"names":["props","useState","status","setStatus","editMode","setEditMode","useEffect","type","onChange","e","target","value","onBlur","updStatusThunk","autoFocus","onKeyDown","key","onClick","style","marginLeft","className","userId","useParams","myId","loadProfile","profile","src","profileBackground","alt","photos","large","photoUpdating","Preloader","userIcon","files","updatePhoto","fullName","followed","title","disabled","disableWhileRequest","unfollowUser","followUser","href","contacts","facebook","twitter","compose","withRedirect","connect","state","profilePage","auth","userData","id"],"sourceRoot":""}