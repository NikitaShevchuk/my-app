{"version":3,"file":"static/js/275.b6ff3e0e.chunk.js","mappings":"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","sources":["components/HOC/withRedirect.jsx","webpack://my-app/./src/components/MainContent/Profile/Profile.module.css?4a10","components/MainContent/Profile/AdditionalProfileInfo.jsx","components/MainContent/Profile/ProfileInfo.jsx","components/MainContent/Profile/EditProfile.jsx","components/common/ErrorComponent.jsx","components/MainContent/Feed/NewPost.jsx","components/MainContent/Feed/Feed.jsx","components/MainContent/Feed/SinglePost.jsx","components/MainContent/Feed/postsReselector.jsx","components/MainContent/Feed/FeedContainer.jsx","components/MainContent/Profile/Profile.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuthorized: state.auth.isAuthorized\r\n})\r\n\r\nconst WithRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuthorized) return <Navigate replace to=\"/login\" />\r\n            return <Component />\r\n        }\r\n    }\r\n    return connect(mapStateToPropsRedirect)(RedirectComponent);\r\n}\r\nexport default WithRedirect;","// extracted by mini-css-extract-plugin\nexport default {\"whiteBg\":\"Profile_whiteBg__PKEUq\",\"transparent\":\"Profile_transparent__VkP+M\",\"green\":\"Profile_green__bc29p\",\"red\":\"Profile_red__0LH4T\",\"additionalInf\":\"Profile_additionalInf__hWGk-\",\"additionalInfActive\":\"Profile_additionalInfActive__zcc7U\"};","import React, {useRef, useState, useEffect} from 'react';\r\nimport {Field} from \"react-final-form\"\r\nimport {isLink} from \"../../common/validators\";\r\nimport {Input} from \"../../common/FormControl\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport style from './Profile.module.css'\r\n\r\nconst AdditionalProfileInfo = ({contacts, setProfileEditMode,\r\n                                   isMyProfile, profileEditMode, followed,\r\n                                   unfollowUserProfile, followUserProfile,\r\n                                   submitting, pristine, disableWhileRequest}) => {\r\n    let toggleSubmenu = useRef();\r\n    let [editSocialMedia, setEditSocialMedia] = useState(false)\r\n    const contactsArray = Object.keys(contacts).map(key => [key, contacts[key]])\r\n    useEffect(() => {\r\n        let clickOutsideElement = e => {\r\n            if (editSocialMedia && toggleSubmenu.current && !toggleSubmenu.current.contains(e.target)) {\r\n                setEditSocialMedia(false)\r\n            }\r\n        }\r\n        document.addEventListener('mousedown', clickOutsideElement)\r\n        return () => {\r\n            document.removeEventListener('mousedown', clickOutsideElement)\r\n        }\r\n    }, [editSocialMedia])\r\n    return <div className=\"additional-profile-info\">\r\n        <div className=\"social-media\">\r\n            {contactsArray.map(item => {\r\n                if (item[1] === null || item[1] === '' || item[0] === 'vk') return ''\r\n                return <div className='social-media__element' key={contactsArray.indexOf(item)}>\r\n                    <a href={`${item[1]}`} target='_blank'><FontAwesomeIcon icon={`fab fa-${item[0]}`}/></a></div>\r\n            })}\r\n            {profileEditMode &&\r\n                <>\r\n                    <div className='edit-social-media' onClick={() => setEditSocialMedia(!editSocialMedia)}>\r\n                        <FontAwesomeIcon icon=\"fas fa-angle-down\"/>\r\n                    </div>\r\n                        <div className={editSocialMedia ? style.additionalInfActive : style.additionalInf} ref={toggleSubmenu}>\r\n                            {contactsArray.map(item => {\r\n                                if (item[0] === 'website' || item[0] === 'vk' || item[0] === 'mainLink') return ''\r\n                                return <Field name={item[0]}\r\n                                              label={item[0]}\r\n                                              initialValue={item[1]}\r\n                                              component={Input}\r\n                                              validate={isLink}\r\n                                              key={contactsArray.indexOf(item)}/>\r\n                            })}\r\n                        </div>\r\n                </>\r\n            }\r\n        </div>\r\n        {isMyProfile ?\r\n            profileEditMode ?\r\n                <>\r\n                    <button type='submit' disabled={submitting || pristine} className=\"add-butn\">Save</button>\r\n                    <button onClick={() => setProfileEditMode(false)} className=\"add-butn white\">Cancel</button>\r\n                </>\r\n                :\r\n                <button onClick={() => setProfileEditMode(true)} className=\"add-butn\">Edit profile</button>\r\n            :\r\n            followed ?\r\n                <button title=\"\" className=\"add-butn\" disabled={disableWhileRequest}\r\n                        onClick={unfollowUserProfile}>Unfollow</button>\r\n                :\r\n                <button title=\"\" className=\"add-butn\" disabled={disableWhileRequest}\r\n                        onClick={followUserProfile}>Follow</button>\r\n        }\r\n    </div>\r\n};\r\n\r\nexport default AdditionalProfileInfo;","import React from 'react';\r\nimport style from \"./Profile.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport AdditionalProfileInfo from \"./AdditionalProfileInfo\";\r\n\r\nconst ProfileInfo = ({setProfileEditMode, profile, isMyProfile,\r\n                         userId, followUser, unfollowUser,\r\n                         updStatusThunk, status, profileEditMode, followed,setMyStatus}) => {\r\n\r\n    const followUserProfile = () => {\r\n        followUser(userId);\r\n    }\r\n    const unfollowUserProfile = () => {\r\n        unfollowUser(userId);\r\n    }\r\n\r\n    return <>\r\n        <div className=\"admin-name timeline-info__row\">\r\n            <h5>{profile.fullName}</h5>\r\n            <ProfileStatus isMyProfile={isMyProfile}\r\n                           status={status}\r\n                           updStatusThunk={updStatusThunk}\r\n                           setMyStatus={setMyStatus}\r\n            />\r\n        </div>\r\n        <AdditionalProfileInfo\r\n            contacts={profile.contacts} setProfileEditMode={setProfileEditMode}\r\n            isMyProfile={isMyProfile} profileEditMode={profileEditMode} followed={followed}\r\n            unfollowUserProfile={unfollowUserProfile} followUserProfile={followUserProfile}\r\n        />\r\n        <div className='timeline-info__row'>\r\n            <div className=\"lookingForAJob\">\r\n                <div className='lookingForAJobDescription'>\r\n                    {profile.lookingForAJobDescription}\r\n                </div>\r\n                <div className={`${profile.lookingForAJob ? style.green : style.red}`}>\r\n                    {profile.lookingForAJob ? 'Looking for a job' : 'Not interested in job'}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n};\r\n\r\nexport default ProfileInfo;","import React, {useState} from 'react';\r\nimport {Form, Field} from \"react-final-form\"\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport style from \"./Profile.module.css\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../common/validators\";\r\nimport {Input} from \"../../common/FormControl\";\r\nimport AdditionalProfileInfo from \"./AdditionalProfileInfo\";\r\n\r\nconst EditProfile = ({setProfileEditMode, isMyProfile,\r\n                         status, profile, myId,\r\n                         updateProfile, updStatusThunk, profileEditMode,\r\n                         disableWhileRequest\r\n                     }) => {\r\n    const onSubmit = (formData) => {\r\n        updateProfile({...formData, contacts: {\r\n                github: formData.github,\r\n                vk: null,\r\n                facebook: formData.facebook,\r\n                instagram: formData.instagram,\r\n                twitter: formData.twitter,\r\n                website: null,\r\n                youtube: formData.youtube,\r\n                mainLink: null\r\n            }})\r\n        setProfileEditMode(false)\r\n    }\r\n    const composeValidators = (...validators) => value =>\r\n        validators.reduce((error, validator) => error || validator(value), undefined)\r\n    let minLength4 = minLengthCreator(4);\r\n    let maxLength20 = maxLengthCreator(20);\r\n    let maxLength120 = maxLengthCreator(120);\r\n    let [lookingForAJobState, setLookingFoAJobState] = useState(profile.lookingForAJob)\r\n    return <>\r\n        <Form onSubmit={onSubmit} render={ ({handleSubmit, submitting, pristine}) => (\r\n            <form className='' onSubmit={handleSubmit}>\r\n                <div className=\"admin-name timeline-info__row\">\r\n                    <Field name='userId' type='hidden' component='input' initialValue={myId} />\r\n                    <h5><Field name='fullName'\r\n                               validate={composeValidators(required, minLength4, maxLength20)}\r\n                               initialValue={ profile.fullName }\r\n                               component={Input} /></h5>\r\n                    <Field name='aboutMe' component='input' type='hidden' initialValue={status}/>\r\n                    <ProfileStatus isMyProfile={false}\r\n                                   status={status}\r\n                                   updStatusThunk={updStatusThunk}/>\r\n                </div>\r\n                <AdditionalProfileInfo\r\n                    contacts={profile.contacts} setProfileEditMode={setProfileEditMode}\r\n                isMyProfile={isMyProfile} profileEditMode={profileEditMode}\r\n                submitting={submitting} pristine={pristine} disableWhileRequest={disableWhileRequest}\r\n                />\r\n                <div className='timeline-info__row'>\r\n                    <div className=\"lookingForAJob\">\r\n                        <div className='lookingForAJobDescription-edit'>\r\n                            <Field name='lookingForAJobDescription'\r\n                                   validate={composeValidators(maxLength120)}\r\n                                   initialValue={profile.lookingForAJobDescription}\r\n                                   component={Input} />\r\n                        </div>\r\n                        <div onClick={() => setLookingFoAJobState(!lookingForAJobState)}\r\n                             className={`${lookingForAJobState ? style.green : style.red}`}>\r\n                            <label htmlFor=\"job\">Looking fo a job</label>\r\n                            <Field name='lookingForAJob' id='job'\r\n                                   initialValue={profile.lookingForAJob}\r\n                                   type='checkbox' label='Looking for a job'\r\n                                   component='input' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        ) } />\r\n    </>\r\n};\r\n\r\nexport default EditProfile;","import React from 'react';\r\n\r\nconst ErrorComponent = (props) => {\r\n    return (\r\n        <div className='local-error'>\r\n            <span className=\"text\">{props.errorText}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorComponent;","import React from \"react\";\r\nimport {Form, Field} from \"react-final-form\"\r\nimport {addPostActionCreator} from \"../../redux/postPageReducer\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faFile, faMusic} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst NewPostForm = ({onSubmit}) => {\r\n    return <Form onSubmit={onSubmit}\r\n                 render={({handleSubmit}) => (\r\n                     <form onSubmit={handleSubmit}>\r\n                         <Field name={'postBody'} initialValue=\"What's new?\" component={'textarea'}/>\r\n                         <div className=\"attachments\">\r\n                             <div className=\"icons\">\r\n                                 <FontAwesomeIcon icon={faMusic} />\r\n                                 <FontAwesomeIcon icon={faFile} />\r\n                             </div>\r\n                             <button className='add-butn'>Post</button>\r\n                         </div>\r\n                     </form>\r\n                 )}\r\n    />\r\n}\r\n\r\nconst NewPost = ({addPostActionCreator}) => {\r\n\r\n    const onSubmit = formData => {\r\n        addPostActionCreator(formData)\r\n    }\r\n    return <div className=\"new-postbox\">\r\n        <div className=\"newpst-input\">\r\n            <NewPostForm onSubmit={onSubmit}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default NewPost;","import React from \"react\";\r\nimport NewPost from \"./NewPost\";\r\n\r\n\r\nconst Feed = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"loadMore opacity-animation\">\r\n                <NewPost state={props.state} onPostChange={props.onPostChange}\r\n                         addPostActionCreator={props.addPostActionCreator } postNewText={props.postNewText}\r\n                         profileImg={props.profileImg}/>\r\n                {props.postList}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Feed;","import React from \"react\";\r\nimport profileBackground from \"../../common/assets/img/profileCover.jpg\";\r\n\r\nconst SinglePost = (props) => {\r\n    return (\r\n        <div className=\"user-post\">\r\n            <div className=\"friend-info\">\r\n                <figure>\r\n                    <img src={props.profileImg} alt=\"\"/>\r\n                </figure>\r\n                <div className=\"friend-name\">\r\n                    <ins><a href=\"time-line.html\" title=\"\">{props.userName}</a></ins>\r\n                    <span>published: june,2 2018 19:PM</span>\r\n                </div>\r\n                <div className=\"post-meta\">\r\n                    <img src={profileBackground} alt=\"\"/>\r\n                    <div className=\"we-video-info\">\r\n                        <ul>\r\n                            <li>\r\n                                        <span className=\"views\"\r\n                                              title=\"views\">\r\n                                            <i className=\"fa fa-eye\"></i>\r\n                                            <ins>1.2k</ins>\r\n                                        </span>\r\n                            </li>\r\n                            <li>\r\n                                        <span className=\"comment\"\r\n                                              title=\"Comments\">\r\n                                            <i className=\"fa fa-comments-o\"></i>\r\n                                            <ins>52</ins>\r\n                                        </span>\r\n                            </li>\r\n                            <li>\r\n                                        <span className=\"like\"\r\n                                              title=\"like\">\r\n                                            <i className=\"ti-heart\"></i>\r\n                                            <ins>{props.likesCount}</ins>\r\n                                        </span>\r\n                            </li>\r\n                            <li>\r\n                                        <span className=\"dislike\"\r\n                                              title=\"dislike\">\r\n                                            <i className=\"ti-heart-broken\"></i>\r\n                                            <ins>200</ins>\r\n                                        </span>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        <p>\r\n                            {props.postText}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SinglePost;","import {createSelector} from \"reselect\";\r\nimport SinglePost from \"./SinglePost\";\r\n\r\nconst getPosts = state => state.postPage.posts\r\nconst getProfileImg = state => state.profilePage.profile?.photos.small\r\nconst getUserName= state => state.profilePage.profile.fullName\r\n\r\nexport const postsSelector = createSelector(getPosts, getProfileImg, getUserName, (posts, profileImg, userName) => {\r\n    return posts.map( postData => <SinglePost postText={postData.postText}\r\n                                              likesCount={postData.likesCount}\r\n                                              profileImg={profileImg}\r\n                                              userName={userName}\r\n                                              key={postData.id}/> )\r\n})","import React from \"react\";\r\nimport Feed from \"./Feed\";\r\nimport {addPostActionCreator} from \"../../redux/postPageReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {postsSelector} from './postsReselector'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        postList: postsSelector(state),\r\n        profileImg: state.auth.profileImg\r\n    }\r\n}\r\n\r\nconst FeedContainer = connect(mapStateToProps, {addPostActionCreator})(Feed)\r\n\r\nexport default FeedContainer;","import React, {useEffect, useState} from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followUser,\r\n    loadProfile,\r\n    unfollowUser,\r\n    updatePhoto,\r\n    updateProfile,\r\n    updStatusThunk\r\n} from \"../../redux/ProfilePageReducer\";\r\nimport {compose} from \"redux\";\r\nimport withRedirect from \"../../HOC/withRedirect\";\r\nimport EditProfile from \"./EditProfile\";\r\nimport profileBackground from \"../../common/assets/img/profileCover.jpg\";\r\nimport style from \"./Profile.module.css\";\r\nimport UserPhoto from \"../../common/UserPhoto\";\r\nimport ErrorComponent from \"../../common/ErrorComponent\";\r\nimport {setMyStatus, updateProfileImg} from \"../../redux/auth\";\r\nimport FeedContainer from \"../Feed/FeedContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    let userId = useParams().userId;\r\n    let isMyProfile = false;\r\n    if (!userId) userId = props.myId\r\n    !userId || userId === props.myId ? isMyProfile = true : isMyProfile = false;\r\n\r\n    let [profileEditMode, setProfileEditMode] = useState(false)\r\n\r\n    useEffect(() => {\r\n        props.loadProfile(userId)\r\n    }, [userId])\r\n\r\n    const onPhotoUpload = (e) => {\r\n        if (e.target.files[0]) props.updatePhoto(e.target.files[0]).then(response => {\r\n            props.updateProfileImg(response)\r\n        })\r\n    }\r\n    if (!props.profile) return <Preloader/>\r\n    return <div className='central-meta'>\r\n        {\r\n            props.localError && <ErrorComponent errorText={props.localError} />\r\n        }\r\n        <div className=\"feature-photo\">\r\n            <figure>\r\n                <img src={profileBackground} alt=\"\"/>\r\n            </figure>\r\n            <div className=\"bg\">\r\n                <div className=\"timeline-info\">\r\n                    <div className=\"user-avatar\">\r\n                        <figure\r\n                            className={props.profile.photos?.large && !props.photoUpdating ? style.transparent : style.whiteBg}>\r\n                            {props.photoUpdating ? <Preloader/> :\r\n                                <UserPhoto profileImg={props.profile.photos?.large}/>\r\n                            }\r\n                            {isMyProfile ?\r\n                                <form className=\"edit-phto\">\r\n                                    <i className=\"fa fa-edit\"/>\r\n                                    <label className=\"fileContainer\">\r\n                                        Edit Display Photo\r\n                                        <input onChange={onPhotoUpload} type=\"file\" accept=\".jpg, .jpeg, .png\"/>\r\n                                    </label>\r\n                                </form>\r\n                                :\r\n                                ''\r\n                            }\r\n                        </figure>\r\n                    </div>\r\n                    <div className=\"timeline-info__container\">\r\n                        {profileEditMode ? <EditProfile {...props} setProfileEditMode={setProfileEditMode}\r\n                                                        profileEditMode={profileEditMode}\r\n                                                        isMyProfile={isMyProfile}/> :\r\n                            <ProfileInfo {...props} setProfileEditMode={setProfileEditMode}\r\n                                         profileEditMode={profileEditMode}\r\n                                         isMyProfile={isMyProfile}\r\n                                         setMyStatus={props.setMyStatus}\r\n                            />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <FeedContainer/>\r\n    </div>\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        followed: state.profilePage.followed,\r\n        disableWhileRequest: state.profilePage.disableWhileRequest,\r\n        status: state.profilePage.status,\r\n        myId: state.auth.userData.id,\r\n        photoUpdating: state.profilePage.photoUpdating,\r\n        localError: state.profilePage.localError\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRedirect,\r\n    connect(mapStateToProps, {followUser, unfollowUser, loadProfile, updStatusThunk, updatePhoto, updateProfile, updateProfileImg, setMyStatus})\r\n)(Profile);"],"names":["mapStateToPropsRedirect","state","isAuthorized","auth","Component","RedirectComponent","this","props","replace","to","React","connect","contacts","setProfileEditMode","isMyProfile","profileEditMode","followed","unfollowUserProfile","followUserProfile","submitting","pristine","disableWhileRequest","toggleSubmenu","useRef","useState","editSocialMedia","setEditSocialMedia","contactsArray","Object","keys","map","key","useEffect","clickOutsideElement","e","current","contains","target","document","addEventListener","removeEventListener","className","item","href","icon","indexOf","onClick","style","ref","name","label","initialValue","component","Input","validate","isLink","type","disabled","title","profile","userId","followUser","unfollowUser","updStatusThunk","status","setMyStatus","fullName","ProfileStatus","lookingForAJobDescription","lookingForAJob","myId","updateProfile","composeValidators","validators","value","reduce","error","validator","undefined","minLength4","minLengthCreator","maxLength20","maxLengthCreator","maxLength120","lookingForAJobState","setLookingFoAJobState","onSubmit","formData","github","vk","facebook","instagram","twitter","website","youtube","mainLink","render","handleSubmit","required","htmlFor","id","errorText","NewPostForm","faMusic","faFile","addPostActionCreator","onPostChange","postNewText","profileImg","postList","src","alt","userName","profileBackground","likesCount","postText","postsSelector","createSelector","postPage","posts","profilePage","photos","small","postData","Feed","compose","withRedirect","userData","photoUpdating","localError","loadProfile","updatePhoto","updateProfileImg","useParams","large","Preloader","UserPhoto","onChange","files","then","response","accept"],"sourceRoot":""}