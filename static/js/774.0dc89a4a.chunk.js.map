{"version":3,"file":"static/js/774.0dc89a4a.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/MainContent/Profile/Profile.module.css?4a10","components/MainContent/Profile/ProfileInfo.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/MainContent/Profile/EditProfile.jsx","components/MainContent/Profile/Profile.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"whiteBg\":\"Profile_whiteBg__PKEUq\",\"transparent\":\"Profile_transparent__VkP+M\",\"green\":\"Profile_green__bc29p\",\"red\":\"Profile_red__0LH4T\"};","import React from 'react';\r\nimport style from \"./Profile.module.css\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport UserPhoto from \"../../common/UserPhoto\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = ({setProfileEditMode, profile, isMyProfile, userId, ...props}) => {\r\n    const followUserProfile = () => {\r\n        props.followUser(userId);\r\n    }\r\n    const unfollowUserProfile = () => {\r\n        props.unfollowUser(userId);\r\n    }\r\n    return <>\r\n        <div className=\"admin-name timeline-info__row\">\r\n            <h5>{profile.fullName}</h5>\r\n            <ProfileStatus isMyProfile={isMyProfile} status={props.status}\r\n                           updStatusThunk={props.updStatusThunk}/>\r\n        </div>\r\n        {isMyProfile ?\r\n            <button onClick={() => setProfileEditMode(true)} className=\"add-butn\">Edit profile</button>\r\n            :\r\n            props.followed ?\r\n\r\n                <button title=\"\" className=\"add-butn\" disabled={props.disableWhileRequest}\r\n                        onClick={unfollowUserProfile}>Unfollow</button> :\r\n\r\n                <button title=\"\" className=\"add-butn\" disabled={props.disableWhileRequest}\r\n                        onClick={followUserProfile}>Follow</button>\r\n        }\r\n        <div className='timeline-info__row'>\r\n            <div className=\"lookingFoAJob\">\r\n                <div className={`${profile.lookingFoAJob ? style.green : style.red}`}>\r\n                    {profile.lookingFoAJob ? 'Looking for a job' : 'Not interested in job'}\r\n                </div>\r\n                <div>\r\n                    {profile.lookingFoAJobDescription}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n};\r\n\r\nexport default ProfileInfo;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react';\r\nimport {Form, Field} from \"react-final-form\"\r\n\r\nconst EditProfile = (props) => {\r\n    return\r\n};\r\n\r\nexport default EditProfile;","import React, {useEffect, useState} from \"react\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport {connect} from \"react-redux\";\r\nimport {followUser, loadProfile, unfollowUser, updatePhoto, updStatusThunk} from \"../../redux/ProfilePageReducer\";\r\nimport {compose} from \"redux\";\r\nimport withRedirect from \"../../HOC/withRedirect\";\r\nimport EditProfile from \"./EditProfile\";\r\nimport profileBackground from \"../../common/assets/img/profileCover.jpg\";\r\nimport style from \"./Profile.module.css\";\r\nimport UserPhoto from \"../../common/UserPhoto\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    let userId = useParams().userId;\r\n    let isMyProfile = false;\r\n    if (!userId) userId = props.myId\r\n    !userId || userId === props.myId ? isMyProfile = true : isMyProfile = false;\r\n\r\n    let [profileEditMode, setProfileEditMode] = useState(false)\r\n\r\n    useEffect(() => {\r\n        props.loadProfile(userId)\r\n    }, [userId])\r\n\r\n    const onPhotoUpload = (e) => {\r\n        if (e.target.files[0]) props.updatePhoto(e.target.files[0])\r\n    }\r\n    if (!props.profile) return <Preloader/>\r\n    if (profileEditMode) return <EditProfile {...props} setProfileEditMode={setProfileEditMode}/>\r\n    return <div className='central-meta'>\r\n        <div className=\"feature-photo\">\r\n            <figure>\r\n                <img src={profileBackground} alt=\"\"/>\r\n                <div className=\"social-media\">\r\n                    <div className='social-media__element'><a\r\n                        href={`${props.profile.contacts.facebook}`}\r\n                        target='_blank'\r\n                    ><i className=\"ti-facebook\"/></a></div>\r\n                    <div className='social-media__element'>\r\n                        <a href={`${props.profile.contacts.twitter}`} target='_blank'><i className=\"ti-twitter\"/></a>\r\n                    </div>\r\n                </div>\r\n            </figure>\r\n            <div className=\"bg\">\r\n                <div className=\"timeline-info\">\r\n                    <div className='timeline-info__container'>\r\n                        <div className='timeline-info__row'>\r\n                            <div className=\"user-avatar\">\r\n                                <figure\r\n                                    className={props.profile.photos.large && !props.photoUpdating ? style.transparent : style.whiteBg}>\r\n                                    {props.photoUpdating ? <Preloader/> :\r\n                                        <UserPhoto userPhoto={props.profile.photos.large}/>\r\n                                    }\r\n                                    {isMyProfile ?\r\n                                        <form className=\"edit-phto\">\r\n                                            <i className=\"fa fa-edit\"/>\r\n                                            <label className=\"fileContainer\">\r\n                                                Edit Display Photo\r\n                                                <input onChange={onPhotoUpload} type=\"file\"/>\r\n                                            </label>\r\n                                        </form>\r\n                                        :\r\n                                        ''\r\n                                    }\r\n                                </figure>\r\n                            </div>\r\n                        </div>\r\n                        <ProfileInfo {...props} setProfileEditMode={setProfileEditMode} isMyProfile={isMyProfile} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        followed: state.profilePage.followed,\r\n        disableWhileRequest: state.profilePage.disableWhileRequest,\r\n        status: state.profilePage.status,\r\n        myId: state.auth.userData.id,\r\n        photoUpdating: state.profilePage.photoUpdating\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRedirect,\r\n    connect(mapStateToProps, {followUser, unfollowUser, loadProfile, updStatusThunk, updatePhoto})\r\n)(Profile);"],"names":["setProfileEditMode","profile","isMyProfile","userId","props","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","className","fullName","ProfileStatus","status","updStatusThunk","onClick","followed","title","disabled","disableWhileRequest","unfollowUser","followUser","lookingFoAJob","style","lookingFoAJobDescription","compose","withRedirect","connect","state","profilePage","myId","auth","userData","id","photoUpdating","loadProfile","updatePhoto","useParams","useState","profileEditMode","useEffect","src","profileBackground","alt","href","contacts","facebook","twitter","photos","large","Preloader","UserPhoto","userPhoto","onChange","e","files","type"],"sourceRoot":""}